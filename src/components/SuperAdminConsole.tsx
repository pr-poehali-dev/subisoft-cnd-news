import { useState, useRef, useEffect } from "react";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Badge } from "@/components/ui/badge";
import Icon from "@/components/ui/icon";
import { useToast } from "@/hooks/use-toast";

interface ConsoleMessage {
  id: number;
  type: 'command' | 'output' | 'error' | 'ai';
  content: string;
  timestamp: string;
}

interface SuperAdminConsoleProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  onAddNews: (news: any) => void;
  onDeleteNews: (id: number) => void;
  newsList: any[];
}

export const SuperAdminConsole = ({ open, onOpenChange, onAddNews, onDeleteNews, newsList }: SuperAdminConsoleProps) => {
  const { toast } = useToast();
  const [command, setCommand] = useState("");
  const [messages, setMessages] = useState<ConsoleMessage[]>([
    {
      id: 1,
      type: 'output',
      content: 'SubiSoftCND Console v2.0 - –†–µ–∂–∏–º –≤—ã—Å—à–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω',
      timestamp: new Date().toLocaleTimeString('ru-RU')
    },
    {
      id: 2,
      type: 'output',
      content: '–í–≤–µ–¥–∏—Ç–µ "help" –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥',
      timestamp: new Date().toLocaleTimeString('ru-RU')
    }
  ]);
  const scrollRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (scrollRef.current) {
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
    }
  }, [messages]);

  const addMessage = (type: ConsoleMessage['type'], content: string) => {
    const newMessage: ConsoleMessage = {
      id: Date.now(),
      type,
      content,
      timestamp: new Date().toLocaleTimeString('ru-RU')
    };
    setMessages(prev => [...prev, newMessage]);
  };

  const simulateAI = (query: string) => {
    const responses: Record<string, string> = {
      '—Å—Ç–∞—Ç—É—Å': `–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –ê–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: ${newsList.length}. –ù–∞–≥—Ä—É–∑–∫–∞: 23%. –ü–∞–º—è—Ç—å: 512MB/2GB.`,
      '–∞–Ω–∞–ª–∏—Ç–∏–∫–∞': `–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: ${newsList.length * 150} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, ${newsList.length * 23} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π. –ö–æ–Ω–≤–µ—Ä—Å–∏—è: 4.2%. –°–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.`,
      '–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è': '–†–µ–∫–æ–º–µ–Ω–¥—É—é: —Å–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (-30% —Ä–∞–∑–º–µ—Ä–∞), –≤–∫–ª—é—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å SQL –∑–∞–ø—Ä–æ—Å—ã. –û–∂–∏–¥–∞–µ–º—ã–π –ø—Ä–∏—Ä–æ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏: 40%.',
      '–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å': '–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: OK. –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 0 —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π. –í—Å–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã SSL –∞–∫—Ç—É–∞–ª—å–Ω—ã. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ 7 –¥–Ω–µ–π.',
      '–ø—Ä–æ–≥–Ω–æ–∑': '–ù–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ—Ç—Å—è —Ä–æ—Å—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –Ω–∞ 15% –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –º–æ—â–Ω–æ—Å—Ç–∏.',
    };

    const lowerQuery = query.toLowerCase();
    for (const [key, value] of Object.entries(responses)) {
      if (lowerQuery.includes(key)) {
        return value;
      }
    }

    return `–ò–ò-–∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞ "${query}": –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã: status, analytics, news-list. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π, –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é —Å–∏—Å—Ç–µ–º—ã.`;
  };

  const executeCommand = (cmd: string) => {
    const [command, ...args] = cmd.trim().split(' ');
    
    addMessage('command', `> ${cmd}`);

    switch(command.toLowerCase()) {
      case 'help':
        addMessage('output', `
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üì∞ –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–¢–ï–ù–¢–û–ú:
  news-add <–∑–∞–≥–æ–ª–æ–≤–æ–∫> | <–æ–ø–∏—Å–∞–Ω–∏–µ> | <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> | <–∞–≤—Ç–æ—Ä> | <url_–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è>
  news-delete <id>
  news-list
  news-clear

ü§ñ –ò–ò-–ê–°–°–ò–°–¢–ï–ù–¢:
  ai <–∑–∞–ø—Ä–æ—Å> - –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò
  ai —Å—Ç–∞—Ç—É—Å - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
  ai –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Ä—Ç–∞–ª–∞
  ai –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  ai –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  ai –ø—Ä–æ–≥–Ω–æ–∑ - –ü—Ä–æ–≥–Ω–æ–∑ —Ä–∞–∑–≤–∏—Ç–∏—è

‚öôÔ∏è –°–ò–°–¢–ï–ú–ê:
  status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
  analytics - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ä—Ç–∞–ª–∞
  users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  logs - –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
  backup - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
  clear - –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å

üé® –ù–ê–°–¢–†–û–ô–ö–ò:
  theme <light/dark> - –°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É
  cache-clear - –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`);
        break;

      case 'news-add':
        const parts = args.join(' ').split('|').map(p => p.trim());
        if (parts.length === 5) {
          const newNews = {
            id: Date.now(),
            title: parts[0],
            excerpt: parts[1],
            category: parts[2],
            author: parts[3],
            image: parts[4],
            date: new Date().toLocaleDateString('ru-RU')
          };
          onAddNews(newNews);
          addMessage('output', `‚úì –ù–æ–≤–æ—Å—Ç—å "${parts[0]}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ (ID: ${newNews.id})`);
        } else {
          addMessage('error', '–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: news-add <–∑–∞–≥–æ–ª–æ–≤–æ–∫> | <–æ–ø–∏—Å–∞–Ω–∏–µ> | <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> | <–∞–≤—Ç–æ—Ä> | <url>');
        }
        break;

      case 'news-delete':
        const id = parseInt(args[0]);
        if (id) {
          onDeleteNews(id);
          addMessage('output', `‚úì –ù–æ–≤–æ—Å—Ç—å —Å ID ${id} —É–¥–∞–ª–µ–Ω–∞`);
        } else {
          addMessage('error', '–û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ ID –Ω–æ–≤–æ—Å—Ç–∏');
        }
        break;

      case 'news-list':
        if (newsList.length === 0) {
          addMessage('output', '–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        } else {
          addMessage('output', `–í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ${newsList.length}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`);
          newsList.forEach(news => {
            addMessage('output', `[${news.id}] ${news.title} - ${news.category} (${news.date})`);
          });
        }
        break;

      case 'news-clear':
        newsList.forEach(news => onDeleteNews(news.id));
        addMessage('output', '‚úì –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω—ã');
        break;

      case 'ai':
        const aiQuery = args.join(' ');
        if (!aiQuery) {
          addMessage('error', '–û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ò–ò. –ù–∞–ø—Ä–∏–º–µ—Ä: ai —Å—Ç–∞—Ç—É—Å');
        } else {
          addMessage('ai', `ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: ${simulateAI(aiQuery)}`);
        }
        break;

      case 'status':
        addMessage('output', `
–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã SubiSoftCND:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚úì –°–µ—Ä–≤–µ—Ä: –û–Ω–ª–∞–π–Ω (99.9% uptime)
‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –ü–æ–¥–∫–ª—é—á–µ–Ω–∞ (12ms ping)
‚úì CDN: –ê–∫—Ç–∏–≤–µ–Ω (3 —É–∑–ª–∞)
‚úì –ò–ò-–º–æ–¥—É–ª—å: –ê–∫—Ç–∏–≤–µ–Ω (GPT-4 Turbo)
‚úì –ó–∞—â–∏—Ç–∞: –í–∫–ª—é—á–µ–Ω–∞ (WAF + DDoS)
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
CPU: 23% | RAM: 512MB/2GB | Disk: 4.2GB/50GB`);
        break;

      case 'analytics':
        addMessage('output', `
–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Ä—Ç–∞–ª–∞ (24 —á–∞—Å–∞):
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üìä –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${newsList.length * 150}
üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏: ${newsList.length * 23}
üì± –ú–æ–±–∏–ª—å–Ω—ã–µ: 62% | –î–µ—Å–∫—Ç–æ–ø: 38%
üåç –¢–æ–ø —Å—Ç—Ä–∞–Ω—ã: –†–§ (45%), BY (18%), KZ (12%)
‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: 3–º 42—Å
üìà –ö–æ–Ω–≤–µ—Ä—Å–∏—è: 4.2% (+0.3% –∫ –≤—á–µ—Ä–∞)`);
        break;

      case 'users':
        addMessage('output', `
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–∏—Å—Ç–µ–º—ã:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
[1] admin@subisoft.com - –í—ã—Å—à–∏–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
[2] editor@subisoft.com - –ì–ª–∞–≤–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä
[3] moderator@subisoft.com - –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä
[4] author@subisoft.com - –ê–≤—Ç–æ—Ä
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö: 4 | –û–Ω–ª–∞–π–Ω: 2`);
        break;

      case 'logs':
        addMessage('output', `
–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
[18:45:23] INFO: –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ (ID: ${newsList[0]?.id})
[18:42:10] INFO: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É (admin)
[18:40:55] INFO: –ö—ç—à –æ—á–∏—â–µ–Ω
[18:38:12] WARN: –í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ CPU (78%)
[18:35:00] INFO: Backup –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
        break;

      case 'backup':
        addMessage('output', '‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...');
        setTimeout(() => {
          addMessage('output', `‚úì Backup —Å–æ–∑–¥–∞–Ω: backup_${Date.now()}.sql (${(newsList.length * 0.5).toFixed(1)}MB)`);
        }, 1000);
        break;

      case 'cache-clear':
        addMessage('output', '‚è≥ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞...');
        setTimeout(() => {
          addMessage('output', '‚úì –ö—ç—à –æ—á–∏—â–µ–Ω (–æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ 245MB)');
          toast({ title: "–ö—ç—à –æ—á–∏—â–µ–Ω", description: "–°–∏—Å—Ç–µ–º–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞" });
        }, 800);
        break;

      case 'theme':
        const theme = args[0];
        if (theme === 'light' || theme === 'dark') {
          addMessage('output', `‚úì –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${theme}`);
        } else {
          addMessage('error', '–û—à–∏–±–∫–∞: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ theme light –∏–ª–∏ theme dark');
        }
        break;

      case 'restart':
        addMessage('output', '‚ö†Ô∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...');
        setTimeout(() => {
          addMessage('output', '‚úì –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        }, 1500);
        break;

      case 'clear':
        setMessages([{
          id: Date.now(),
          type: 'output',
          content: '–ö–æ–Ω—Å–æ–ª—å –æ—á–∏—â–µ–Ω–∞',
          timestamp: new Date().toLocaleTimeString('ru-RU')
        }]);
        break;

      case '':
        break;

      default:
        addMessage('error', `–û—à–∏–±–∫–∞: –ö–æ–º–∞–Ω–¥–∞ "${command}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ "help" –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.`);
    }
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (command.trim()) {
      executeCommand(command);
      setCommand("");
    }
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-4xl h-[80vh] flex flex-col bg-[#1a1a1a] border-2 border-primary">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-3 text-primary font-mono">
            <Icon name="Terminal" size={24} />
            <span>SubiSoftCND Console v2.0</span>
            <Badge variant="destructive" className="ml-auto">
              –í–´–°–®–ò–ô –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†
            </Badge>
          </DialogTitle>
        </DialogHeader>

        <ScrollArea className="flex-1 rounded-md border border-primary/30 bg-black p-4" ref={scrollRef}>
          <div className="space-y-2 font-mono text-sm">
            {messages.map((msg) => (
              <div key={msg.id} className="flex gap-2">
                <span className="text-primary/50 text-xs">[{msg.timestamp}]</span>
                <div className={`flex-1 ${
                  msg.type === 'command' ? 'text-primary font-bold' :
                  msg.type === 'error' ? 'text-red-500' :
                  msg.type === 'ai' ? 'text-blue-400' :
                  'text-green-400'
                }`}>
                  <pre className="whitespace-pre-wrap font-mono">{msg.content}</pre>
                </div>
              </div>
            ))}
          </div>
        </ScrollArea>

        <form onSubmit={handleSubmit} className="flex gap-2">
          <div className="flex-1 relative">
            <span className="absolute left-3 top-1/2 -translate-y-1/2 text-primary font-mono">
              root@subisoft:~$
            </span>
            <Input
              value={command}
              onChange={(e) => setCommand(e.target.value)}
              className="pl-40 bg-black border-primary/30 text-green-400 font-mono"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É..."
              autoFocus
            />
          </div>
          <Button type="submit" className="gap-2">
            <Icon name="Send" size={18} />
            –í—ã–ø–æ–ª–Ω–∏—Ç—å
          </Button>
        </form>

        <div className="flex gap-2 text-xs text-muted-foreground">
          <kbd className="px-2 py-1 bg-black rounded border border-primary/30 font-mono">help</kbd>
          <span>- —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</span>
          <kbd className="px-2 py-1 bg-black rounded border border-primary/30 font-mono">ai [–∑–∞–ø—Ä–æ—Å]</kbd>
          <span>- –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç</span>
        </div>
      </DialogContent>
    </Dialog>
  );
};
